global
	user haproxy
	group haproxy
	daemon
   log 127.0.0.1 local1 debug
   # JWT
	lua-load /usr/local/share/lua/5.3/jwtverify.lua
   setenv OAUTH_HMAC_SECRET Impotency-Dares-Sage-Dean-Consoling1-Distill-Slicer
   setenv OAUTH_AUDIENCE pcall.app

defaults
  log 127.0.0.1 local1 info
  mode http
  option httplog
  option forwardfor
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s

frontend couch_gateway
   bind *:80
   bind *:443 ssl crt /etc/haproxy/certs/couchdb1.pcall.app.pem
   log 127.0.0.1 local1 info
   http-request redirect scheme https unless { ssl_fc } # force https
   capture request header origin len 256

   # ACL
   acl PATH_creator path_beg  /creators
   acl letsencrypt-acl path_beg /.well-known/acme-challenge/

   # Set Authorization header for creators
   http-request set-header Authorization %[req.hdr(x-auth-token)] if PATH_creator
   http-request del-header x-auth-token if PATH_creator

   # Invoke the jwtverify Lua file
   http-request lua.jwtverify if PATH_creator

   # CORS
   http-response set-header Access-Control-Allow-Methods "GET,POST,PUT,OPTIONS" if { capture.req.hdr(0) -m found }
   http-response set-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
   http-response set-header Access-Control-Allow-Headers "Origin, Accept, x-auth-token, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization" if { capture.req.hdr(0) -m found }
   http-response set-header Access-Control-Allow-Credentials true if { capture.req.hdr(0) -m found }

   # Backend
   use_backend couch_creator_backend if PATH_creator
   use_backend letsencrypt-backend if letsencrypt-acl
   default_backend couch_backend

backend couch_creator_backend
   # Deny if no Authorization header sent
   http-request deny unless { req.hdr(authorization) -m found }

   # CouchDB Proxy Headers added if JWT token is good
   http-request set-header X-Auth-CouchDB-UserName pcallcreator if { var(txn.authorized) -m bool }
   http-request set-header X-Auth-CouchDB-Roles pcalluser if { var(txn.authorized) -m bool }
   http-request set-header X-Auth-CouchDB-Token 950fe9d14a9b6dd8b4c12c9229ce9ecc4fe001f5 if { var(txn.authorized) -m bool }

   server couchdb1 *:5984 check
   #server couchdb1 *:3000 check # for local testing

backend couch_backend
   server couchdb1 *:5984 check

backend letsencrypt-backend
   server letsencrypt *:54321
