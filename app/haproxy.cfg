global
	user haproxy
	group haproxy
	daemon
   log 127.0.0.1 local1 debug
   # JWT
	#lua-load /usr/local/share/lua/5.3/jwtverify.lua
   #setenv OAUTH_HMAC_SECRET Impotency-Dares-Sage-Dean-Consoling1-Distill-Slicer
   #setenv OAUTH_AUDIENCE pcall.app

defaults
  log 127.0.0.1 local1 info
  option tcplog
  mode tcp
  option http-server-close
  timeout connect 1s
  timeout client  20s
  timeout server  20s
  timeout client-fin 20s
  timeout tunnel 1h

frontend couch_gateway
   bind *:443 ssl crt /etc/haproxy/certs/couchdb1.pcall.app.pem
   log 127.0.0.1 local1 info
   mode tcp
   # ACL
   acl PATH_creator path_beg  /creators
   acl letsencrypt-acl path_beg /.well-known/acme-challenge/

   # Set Authorization header for creators
   #http-request set-header Authorization %[req.hdr(x-auth-token)] if PATH_creator
   #http-request del-header x-auth-token if PATH_creator

   # Invoke the jwtverify Lua file
   #http-request lua.jwtverify if PATH_creator

   # Backend
   #use_backend couch_creator_backend if PATH_creator
   use_backend letsencrypt-backend if letsencrypt-acl
   default_backend couch_backend

backend couch_creator_backend
   # Deny if no Authorization header sent
   #http-request deny unless { req.hdr(authorization) -m found }

   # CouchDB Proxy Headers added if JWT token is good
   #http-request set-header X-Auth-CouchDB-UserName pcallcreator
   #http-request set-header X-Auth-CouchDB-Roles pcalluser
   #http-request set-header X-Auth-CouchDB-Token 950fe9d14a9b6dd8b4c12c9229ce9ecc4fe001f5

   server couchdb1 *:5984 check
   #server couchdb1 *:3000 check # for local testing

backend couch_backend
   server couchdb1 *:5984 check
   mode tcp

backend letsencrypt-backend
   server letsencrypt *:54321
